#!/usr/bin/env python3
"""
Isaac Sim Setup Script

This script helps set up Isaac Sim for robot visualization.
It checks for Isaac Sim installation and provides setup instructions.

Author: Tanmay Pancholi
Date: 2024
"""

import os
import sys
import subprocess
import platform

class IsaacSimSetup:
    """Isaac Sim setup helper"""
    
    def __init__(self):
        self.system = platform.system()
        self.isaac_sim_paths = self.get_isaac_sim_paths()
    
    def get_isaac_sim_paths(self):
        """Get possible Isaac Sim installation paths"""
        if self.system == "Darwin":  # macOS
            return [
                "/Applications/NVIDIA-Omniverse/Isaac-Sim",
                "/Applications/Isaac-Sim",
                "/Users/{}/NVIDIA-Omniverse/Isaac-Sim".format(os.getenv('USER', 'user'))
            ]
        elif self.system == "Linux":
            return [
                "/home/{}/NVIDIA-Omniverse/Isaac-Sim".format(os.getenv('USER', 'user')),
                "/opt/NVIDIA-Omniverse/Isaac-Sim",
                "/usr/local/NVIDIA-Omniverse/Isaac-Sim"
            ]
        elif self.system == "Windows":
            return [
                "C:\\Program Files\\NVIDIA-Omniverse\\Isaac-Sim",
                "C:\\Users\\{}\\NVIDIA-Omniverse\\Isaac-Sim".format(os.getenv('USERNAME', 'user'))
            ]
        else:
            return []
    
    def check_isaac_sim_installation(self):
        """Check if Isaac Sim is installed"""
        print("Checking for Isaac Sim installation...")
        
        for path in self.isaac_sim_paths:
            if os.path.exists(path):
                print(f"‚úÖ Found Isaac Sim at: {path}")
                return path
        
        print("‚ùå Isaac Sim not found in standard locations")
        return None
    
    def check_isaac_sim_executable(self, isaac_sim_path):
        """Check if Isaac Sim executable exists"""
        if not isaac_sim_path:
            return False
        
        executable_path = os.path.join(isaac_sim_path, "isaac-sim.sh")
        if self.system == "Windows":
            executable_path = os.path.join(isaac_sim_path, "isaac-sim.exe")
        
        if os.path.exists(executable_path):
            print(f"‚úÖ Found Isaac Sim executable: {executable_path}")
            return executable_path
        else:
            print(f"‚ùå Isaac Sim executable not found at: {executable_path}")
            return False
    
    def check_python_environment(self):
        """Check Python environment for Isaac Sim"""
        print("Checking Python environment...")
        
        try:
            import omni
            print("‚úÖ Omni Python packages available")
            return True
        except ImportError:
            print("‚ùå Omni Python packages not available")
            print("   This is normal if Isaac Sim is not running")
            return False
    
    def create_launch_script(self, isaac_sim_path):
        """Create a launch script for Isaac Sim"""
        if not isaac_sim_path:
            return False
        
        script_content = f"""#!/bin/bash
# Isaac Sim Launch Script
# Generated by setup_isaac_sim.py

cd "{isaac_sim_path}"
./isaac-sim.sh --ext-folder "/Users/tpancholi/dev/nvidia-issac-sim/07-projects/autonomous-warehouse-robot"
"""
        
        script_path = "/Users/tpancholi/dev/nvidia-issac-sim/07-projects/autonomous-warehouse-robot/scripts/launch_isaac_sim.sh"
        
        try:
            with open(script_path, 'w') as f:
                f.write(script_content)
            
            # Make script executable
            os.chmod(script_path, 0o755)
            print(f"‚úÖ Created launch script: {script_path}")
            return True
        except Exception as e:
            print(f"‚ùå Failed to create launch script: {e}")
            return False
    
    def provide_installation_instructions(self):
        """Provide instructions for installing Isaac Sim"""
        print("\n" + "="*60)
        print("ISAAC SIM INSTALLATION INSTRUCTIONS")
        print("="*60)
        print()
        print("1. Download NVIDIA Omniverse Launcher:")
        print("   https://www.nvidia.com/en-us/omniverse/")
        print()
        print("2. Install Omniverse Launcher")
        print()
        print("3. Open Omniverse Launcher and sign in")
        print()
        print("4. Go to 'Exchange' tab")
        print()
        print("5. Search for 'Isaac Sim'")
        print()
        print("6. Click 'Install' on Isaac Sim")
        print()
        print("7. Wait for installation to complete (this may take 30-60 minutes)")
        print()
        print("8. Once installed, run this setup script again")
        print()
        print("="*60)
    
    def provide_usage_instructions(self, isaac_sim_path):
        """Provide instructions for using Isaac Sim"""
        print("\n" + "="*60)
        print("USING ISAAC SIM WITH YOUR ROBOT")
        print("="*60)
        print()
        print("1. Start Isaac Sim:")
        print(f"   cd {isaac_sim_path}")
        print("   ./isaac-sim.sh")
        print()
        print("2. Once Isaac Sim loads:")
        print("   - Go to Window ‚Üí Script Editor")
        print("   - Open the visualization script:")
        print("     /Users/tpancholi/dev/nvidia-issac-sim/07-projects/autonomous-warehouse-robot/scripts/isaac_sim_visualization.py")
        print("   - Click 'Run' to execute the script")
        print()
        print("3. The script will:")
        print("   - Create a warehouse environment")
        print("   - Load your robot model")
        print("   - Run a demonstration")
        print()
        print("4. You can then:")
        print("   - Move the camera around to explore")
        print("   - Use the timeline to control playback")
        print("   - Modify the robot or environment")
        print()
        print("="*60)
    
    def run_setup(self):
        """Run the complete setup process"""
        print("Isaac Sim Setup for Robot Visualization")
        print("="*50)
        
        # Check Isaac Sim installation
        isaac_sim_path = self.check_isaac_sim_installation()
        
        if not isaac_sim_path:
            self.provide_installation_instructions()
            return False
        
        # Check executable
        executable = self.check_isaac_sim_executable(isaac_sim_path)
        if not executable:
            print("‚ùå Isaac Sim executable not found")
            return False
        
        # Check Python environment
        python_ok = self.check_python_environment()
        
        # Create launch script
        script_created = self.create_launch_script(isaac_sim_path)
        
        # Provide usage instructions
        self.provide_usage_instructions(isaac_sim_path)
        
        print("\n" + "="*50)
        print("SETUP SUMMARY")
        print("="*50)
        print(f"Isaac Sim Path: {isaac_sim_path}")
        print(f"Executable: {executable}")
        print(f"Python Environment: {'‚úÖ OK' if python_ok else '‚ùå Not available (normal if Isaac Sim not running)'}")
        print(f"Launch Script: {'‚úÖ Created' if script_created else '‚ùå Failed'}")
        print()
        
        if isaac_sim_path and executable:
            print("üéâ Setup complete! You can now run Isaac Sim with your robot.")
            print()
            print("Quick start:")
            print("1. Run: ./scripts/launch_isaac_sim.sh")
            print("2. In Isaac Sim: Window ‚Üí Script Editor")
            print("3. Open: scripts/isaac_sim_visualization.py")
            print("4. Click 'Run'")
            return True
        else:
            print("‚ùå Setup incomplete. Please check the issues above.")
            return False

def main():
    """Main function"""
    setup = IsaacSimSetup()
    success = setup.run_setup()
    
    if success:
        print("\nüöÄ Ready to visualize your robot in Isaac Sim!")
    else:
        print("\n‚ö†Ô∏è  Please complete the setup steps above.")

if __name__ == "__main__":
    main()
