# Isaac Sim Learning Environment .gitignore

# ===========================================
# Isaac Sim Specific
# ===========================================
# Isaac Sim cache and temporary files
.isaac_sim/
*.isaac_sim
*.usd
*.usda
*.usdc
*.usdz

# Omniverse cache
.omniverse/
omniverse_cache/

# Isaac Sim logs
*.log
logs/
isaac_sim_logs/

# Isaac Sim extensions
exts/
extensions/

# ===========================================
# Docker and Container Files
# ===========================================
# Docker volumes and data
docker-data/
.docker/

# Container logs
container-logs/

# Docker compose override files
docker-compose.override.yml
.env.local

# ===========================================
# ROS2 Specific
# ===========================================
# ROS2 build directories
build/
install/
log/

# ROS2 workspace
ros2_ws/build/
ros2_ws/install/
ros2_ws/log/

# ROS2 cache
.ros/

# ===========================================
# Python
# ===========================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# ===========================================
# macOS
# ===========================================
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# ===========================================
# IDE and Editor Files
# ===========================================
# Visual Studio Code
.vscode/
*.code-workspace

# PyCharm
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ===========================================
# Temporary and Cache Files
# ===========================================
# Temporary files
*.tmp
*.temp
*.bak
*.backup
*.orig
*.rej

# Cache directories
.cache/
cache/

# ===========================================
# Project Specific
# ===========================================
# Backup files
backups/
*.backup

# PID files
*.pid
.isaac_sim.pid

# Environment files
.env
.env.local
.env.production
.env.staging

# Local configuration
config/local/
local_config.yaml
local_config.json

# Generated files
generated/
output/
results/

# Large asset files (add specific ones as needed)
# *.fbx
# *.obj
# *.blend
# *.max
# *.3ds

# ===========================================
# Documentation Build
# ===========================================
# Sphinx build
docs/_build/
docs/build/

# MkDocs build
site/

# ===========================================
# Testing
# ===========================================
# Test results
test_results/
test_output/
coverage/

# ===========================================
# Security
# ===========================================
# API keys and secrets
secrets/
*.key
*.pem
*.p12
*.pfx

# ===========================================
# Custom Exclusions
# ===========================================
# Add any project-specific files to ignore here
# Example:
# custom_models/
# large_datasets/
